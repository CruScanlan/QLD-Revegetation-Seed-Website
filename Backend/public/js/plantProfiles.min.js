function profileAddPhotoUpload(a, b, c) {
    if ("image/jpeg" != a.type)return $(c).val(""), notify("danger", "Error", "All images must be in jpeg format!");
    var d = $("#profile-add-plant_name").val();
    if ("" == d)return $(c).val(""), notify("danger", "Error", 'The field "Plant Name" needs to be filled out');
    var e = new FormData;
    e.append("image", a), e.append("name", d.split(" ").join("-").concat(b));
    var f = $("#profile-add-photo" + b + "-status");
    f.html('<i class="fa fa-spinner fa-lg mt-2 fa-spin" style="margin-top: 0 !important;"></i>'), $("#profile-add-photo4-area").length < 1 && ($("#profile-add-file-inputs").append('<div class="row"><div class="form-group col-md-6" style="margin-left: 5px"><label class="col-md-3 form-control-label" for="profile-add-photo' + (Number(b) + 1) + '-file">Photo ' + (Number(b) + 1) + '</label><div class="col-md-9" id="profile-add-photo' + (Number(b) + 1) + '-status"><input type="file" class="form-control-file" name="profile-add-photo' + (Number(b) + 1) + '-file" id="profile-add-photo' + (Number(b) + 1) + '-file"></div></div><div class="form-group col-md-5" id="profile-add-photo' + (Number(b) + 1) + '-area"></div></div>'), $("#profile-add-photo" + (Number(b) + 1) + "-file").on("change", function () {
        profileAddPhotoUpload($(this).get(0).files[0], String(Number(b) + 1), this)
    })), $.ajax({
        url: "/upload/images/plant-profiles",
        type: "POST",
        data: e,
        processData: !1,
        contentType: !1,
        success: function (a) {
            return a.err ? (notify("danger", "Error", "Image failed to upload"), f.html('<i class="fa fa-close fa-lg mt-2" style="margin-top: 0 !important;"></i>')) : (notify("success", "Success", "Image uploaded successfully"), $("#profile-add-photo" + b + "-area").html('<label class="col-md-2 form-control-label" for="text-input" style="padding: 0; white-space: nowrap">Photo ' + b + ' Caption</label> <div class="col-md-10" style="padding: 0; max-width: 100%"> <input type="text" id="profile-add-photo' + b + '-caption" class="form-control" data-id="profile-add-photo-caption" value="' + d + '"></div>'), f.html('<i class="fa fa-check fa-lg mt-2" style="margin-top: 0 !important;"></i>'))
        }
    })
}
function addProfile() {
    var a = $("#profile-add-plant_name").val();
    if ("" == a)return notify("danger", "Error", 'The field "Plant Name" needs to be filled out');
    var b = tinyMCE.get("profile-add-plant_description").getContent();
    if ("" == b)return notify("danger", "Error", 'The field "Plant Description" needs to be filled out');
    var c = $('*[data-id="profile-add-photo-caption"]');
    if (c.length > 0)for (var d = {}, e = 0; e < c.length; e++) {
        var f = "photo" + (e + 1);
        d[f] = $("#profile-add-photo" + (e + 1) + "-caption").val()
    }
    var g = {name: a, description: b, map: $("#profile-add-map").is(":checked")};
    d && (g.photos = d), $.ajax({
        url: "/api/page-editor/plant-profiles/add",
        data: JSON.stringify(g),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        type: "POST",
        success: function (a) {
            if (!a.err)return $("#modal-new-profile").modal("toggle"), setTimeout(function () {
                notify("success", "Success", "Plant profile added. This will take up to 30sec to appear on the website.")
            }, 250), $("#profile-add-plant_name").val(""), tinyMCE.get("profile-add-plant_description").setContent(""), $("#profile-add-map").prop("checked", !0), $("#profile-add-file-inputs").html('<div class="row"><div class="form-group col-md-6" style="margin-left: 5px"><label class="col-md-3 form-control-label" for="profile-add-photo1-file">Photo 1</label><div class="col-md-9" id="profile-add-photo1-status"><input type="file" class="form-control-file" name="profile-add-photo1-file" id="profile-add-photo1-file"></div></div><div class="form-group col-md-5" id="profile-add-photo1-area"></div></div>'), $("#profile-add-photo1-file").on("change", function () {
                profileAddPhotoUpload($(this).get(0).files[0], "1", this)
            }), $("#profile-add-plant_name-form").attr("class", "form-group"), doneTypingProfileSearch(), $("#profile-add-photo1-file").attr("disabled", !0), void $("#profile-add-save").attr("disabled", "disabled");
            setTimeout(function () {
                notify("danger", "Error", "There was an error adding that plant profile")
            }, 250)
        }
    })
}
function getProfiles(a) {
    profilePage += 1;
    var b = $("#profile-search").val();
    $.get("/api/page-editor/plant-profiles/card-summary", {q: b, p: profilePage, size: 9}, function (b) {
        if (b.err)return notify("danger", "Error", "Could not retrieve current plant profiles from the server");
        var c = $("#profile-container");
        a && c.html(" "), c.append(b.data), $("#profile-results-count").html(b.results + " Result(s)");
        var d = $("#profiles-see-more");
        if (0 == d.length) {
            if (!b.more)return;
            $("#profiles-body").append('<div class="row center-horizontal" style="padding-bottom: 20px; padding-top: 20px" id="profiles-see-more"><button type="button" class="btn btn-info btn-lg center-horizontal" onclick="getProfiles(false);">See More</button></div>')
        } else b.more || d.remove()
    })
}
function deleteProfile(a) {
    swal({
        title: "Are you sure?",
        text: "The plant profile will not be able to be recovered",
        type: "warning",
        showCancelButton: !0,
        confirmButtonClass: "btn-danger",
        confirmButtonText: "Yes, delete it!",
        closeOnConfirm: !1,
        showLoaderOnConfirm: !0
    }, function () {
        var b = {name: a};
        $.post("/api/page-editor/plant-profiles/delete", b, function (a) {
            return doneTypingProfileSearch(), a.err ? swal("Error", "There was an error deleting the plant profile", "error") : a.warn ? swal("Warning", "The plant profile was deleted from the database but not all photos were deleted.", "warning") : swal("Deleted!", "The plant profile has been deleted", "success")
        })
    })
}
function doneTypingProfileAddName() {
    var a = $("#profile-add-plant_name").val();
    if ("" != a) {
        var b = {name: a};
        $.post("/api/page-editor/plant-profiles/exists", b, function (b, c) {
            if (b.err)return notify("danger", "Error", "Could not retrieve plant profile names from the server");
            var d = $("#profile-add-plant_name-form"), e = $("#profile-add-save"), f = $("#profile-add-photo1-file");
            return b.exists ? (notify("danger", "Error", 'There is already a plant profile by the name of "' + a + '"'), f.attr("disabled", "disabled"), e.attr("disabled", "disabled"), d.attr("class", "form-group has-danger")) : (f.removeAttr("disabled"), e.removeAttr("disabled"), d.attr("class", "form-group has-success"))
        })
    }
}
function doneTypingProfileSearch() {
    profilePage = 0, getProfiles(!0)
}
function openEditModal(a) {
    var b = {name: a};
    $.post("/api/page-editor/plant-profiles/edit-info", b, function (a) {
        if (a.err)return notify("danger", "Error", "Could not retrieve plant profile names from the server");
        currentEditProfile = a.data;
        var b = a.data.Plant_Name;
        $("#profile-edit-plant_name").val(b), $("#profile-edit-modal-title").html(`Edit Plant Profile - ${b}`), tinyMCE.get("profile-edit-plant_description").setContent(a.data.Plant_Description), addPhotosToEditModal(a, b), $("#profile-edit-map").prop("checked", a.data.Map), $("#modal-edit-profile").modal("show")
    })
}
function addPhotosToEditModal(a, b) {
    var c = b.split(" ").join("-"), d = $("#profile-edit-photo-area");
    d.html(" ");
    for (let b = 1; b < 5; b++) {
        if (null == a.data["Photo_" + b]) {
            d.append(`<div class="form-group col-sm-2" style="margin-bottom: 0; margin-top: 6px; padding-left: 0" id="profile-edit-photo${b}-current-area"></div><div class="form-group col-sm-3" style="margin-bottom: 0; margin-top: 6px; padding-left: 0"><label class="col-md-3 form-control-label" for="profile-edit-photo${b}-file" style="max-width: 100%">Photo ${b}</label><div class="col-md-9" id="profile-edit-photo${b}-status" style="padding-top: 7px"><input type="file" class="form-control-file" name="profile-edit-photo${b}-file" id="profile-edit-photo${b}-file" data-picture-uploaded="false"></div></div><div class="form-group col-sm-5" style="margin-bottom: 0; margin-top: 6px; padding-right: 0"><label class="col-md-2 form-control-label" for="text-input" style="padding: 0; white-space: nowrap">Photo ${b} Caption</label><div class="col-md-10" style="padding: 0; max-width: 95%"><input type="text" id="profile-edit-photo${b}-caption" class="form-control" data-id="profile-edit-photo-caption" value="${$("#profile-edit-plant_name").val()}"></div></div><div class="col-sm-1" style="padding-left: 0; margin-top: 33px" id="profile-edit-photo${b}-delete-area"></div>`), $("#profile-edit-photo" + b + "-file").on("change", function () {
                profileEditPhotoUpload($(this).get(0).files[0], String(b), this, !0)
            });
            break
        }
        d.append(`<div class="form-group col-sm-2" style="margin-bottom: 0; margin-top: 6px; padding-left: 0" id="profile-edit-photo${b}-current-area"><label class="col-md-3 form-control-label" for="profile-edit-photo1-image" style="max-width: 100%">Photo ${b}</label><div class="col-md-9"><button type="button" class="btn btn-secondary" id="profile-edit-photo${b}-current-button" onclick="showEditPhoto('/plant-profiles/images/${c}',${b})">Current Image</button></div></div><div class="form-group col-sm-3" style="margin-bottom: 0; margin-top: 6px; padding-left: 0"><label class="col-md-3 form-control-label" for="profile-edit-photo${b}-file" style="max-width: 100%">Photo ${b}</label><div class="col-md-9" id="profile-edit-photo${b}-status" style="padding-top: 7px"><input type="file" class="form-control-file" name="profile-edit-photo${b}-file" id="profile-edit-photo${b}-file" data-picture-uploaded="false"></div></div><div class="form-group col-sm-5" style="margin-bottom: 0; margin-top: 6px; padding-right: 0"><label class="col-md-2 form-control-label" for="text-input" style="padding: 0; white-space: nowrap">Photo ${b} Caption</label><div class="col-md-10" style="padding: 0; max-width: 95%"><input type="text" id="profile-edit-photo${b}-caption" class="form-control" data-id="profile-edit-photo-caption" value="${a.data["Photo_" + b]}"></div></div><div class="col-sm-1" style="padding-left: 0; margin-top: 33px"  id="profile-edit-photo${b}-delete-area"><button type="button" class="btn btn-danger center-horizontal" onclick="deleteProfilePhoto(${b})" id="profile-edit-delete-photo${b}"><i class="fa fa-trash fa-lg mt-2 button-icon"></i></button></div>`), $("#profile-edit-photo" + b + "-file").on("change", function () {
            profileEditPhotoUpload($(this).get(0).files[0], String(b), this, !1)
        })
    }
}
function showEditPhoto(a, b) {
    $("#image-title").html("Photo " + b), $("#image-img-area").html(`<img src="${a + b}" style="max-width: 460px;height: auto">`), $("#image-modal").modal("show")
}
function profileEditPhotoUpload(a, b, c, d) {
    if ("image/jpeg" != a.type)return $(c).val(""), notify("danger", "Error", "All images must be in jpeg format!");
    var e = currentEditProfile.Plant_Name, f = new FormData;
    f.append("image", a), f.append("name", e.split(" ").join("-").concat(b));
    var g = $("#profile-edit-photo" + b + "-status");
    g.html('<i class="fa fa-spinner fa-lg mt-2 fa-spin" style="margin-top: 0 !important;"></i>'), $.ajax({
        url: "/upload/images/plant-profiles",
        type: "POST",
        data: f,
        processData: !1,
        contentType: !1,
        success: function (a) {
            if (a.err)return notify("danger", "Error", "Image failed to upload"), g.html('<i class="fa fa-close fa-lg mt-2" style="margin-top: 0 !important;"></i>');
            if (notify("success", "Success", "Image uploaded successfully"), $("#profile-edit-photo" + b + "-current-area").html(`<label class="col-md-3 form-control-label" for="profile-edit-photo1-image" style="max-width: 100%">Photo ${b}</label><div class="col-md-9"><button type="button" class="btn btn-secondary"  id="profile-edit-photo${b}-current-button" onclick="showEditPhoto('/plant-profiles/images/${currentEditProfile.Plant_Name.split(" ").join("-")}',${b})">Current Image</button></div>`), d) {
                var c = String(Number(b) + 1);
                $("#profile-edit-photo-area").append(`<div class="form-group col-sm-2" style="margin-bottom: 0; margin-top: 6px; padding-left: 0"  id="profile-edit-photo${c}-current-area"></div><div class="form-group col-sm-3" style="margin-bottom: 0; margin-top: 6px; padding-left: 0"><label class="col-md-3 form-control-label" for="profile-edit-photo${c}-file" style="max-width: 100%">Photo ${c}</label><div class="col-md-9" id="profile-edit-photo${c}-status" style="padding-top: 7px"><input type="file" class="form-control-file" name="profile-edit-photo${c}-file" id="profile-edit-photo${c}-file" data-picture-uploaded="false"></div></div><div class="form-group col-sm-5" style="margin-bottom: 0; margin-top: 6px; padding-right: 0"><label class="col-md-2 form-control-label" for="text-input" style="padding: 0; white-space: nowrap">Photo ${c} Caption</label><div class="col-md-10" style="padding: 0; max-width: 95%"><input type="text" id="profile-edit-photo${c}-caption" class="form-control" data-id="profile-edit-photo-caption" value="${$("#profile-edit-plant_name").val()}"></div></div><div class="col-sm-1" style="padding-left: 0; margin-top: 33px"  id="profile-edit-photo${c}-delete-area"></div>`), $("#profile-edit-photo" + c + "-file").on("change", function () {
                    var a = $(this).get(0).files[0];
                    console.log(c), profileEditPhotoUpload(a, c, this, !(Number(c) > 3))
                })
            }
            return g.html('<i class="fa fa-check fa-lg mt-2" style="margin-top: 0 !important;"></i>')
        }
    })
}
function deleteProfilePhoto(a) {
    swal({
        title: "Are you sure?",
        text: "The photo will not be able to be recovered",
        type: "warning",
        showCancelButton: !0,
        confirmButtonClass: "btn-danger",
        confirmButtonText: "Yes, delete it!",
        closeOnConfirm: !1,
        showLoaderOnConfirm: !0
    }, function () {
        $.post("/api/page-editor/plant-profiles/delete-photo", {
            name: currentEditProfile.Plant_Name,
            no: a
        }, function (a) {
            return a.err ? swal("Error", "There was an error deleting the photo", "error") : (addPhotosToEditModal(a, currentEditProfile.Plant_Name), swal("Deleted!", "The photo has been deleted", "success"))
        })
    })
}
function profileEditSave() {
    var a = {
        Plant_Name: $("#profile-edit-plant_name").val(),
        Plant_Name_Current: currentEditProfile.Plant_Name,
        Plant_Description: tinyMCE.get("profile-edit-plant_description").getContent(),
        Map: $("#profile-edit-map").is(":checked")
    };
    for (let b = 1; b < 5; b++) {
        let c = $("#profile-edit-photo" + b + "-current-button").length > 0;
        if (c) {
            let c = $("#profile-edit-photo" + b + "-caption").val();
            a["Photo_" + b] = c
        }
    }
    $.ajax({
        url: "/api/page-editor/plant-profiles/edit",
        data: JSON.stringify(a),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        type: "POST",
        success: function (a) {
            if (a.err)return setTimeout(function () {
                notify("danger", "Error", "There was an error editing this plant profile")
            }, 250), $("#modal-edit-profile").modal("toggle");
            doneTypingProfileSearch(), $("#modal-edit-profile").modal("toggle"), setTimeout(function () {
                notify("success", "Success", "Plant profile edited successfully")
            }, 250)
        }
    })
}
function applyModalFixes() {
    $(document).on("show.bs.modal", ".modal", function () {
        var a = 1040 + 10 * $(".modal:visible").length;
        $(this).css("z-index", a), setTimeout(function () {
            $(".modal-backdrop").not(".modal-stack").css("z-index", a - 1).addClass("modal-stack")
        }, 0)
    }), $(document).on("hidden.bs.modal", ".modal", function () {
        $(".modal:visible").length && $(document.body).addClass("modal-open")
    })
}
function notify(a, b, c) {
    $.notify({title: b, message: c}, {
        element: "body",
        position: null,
        type: a,
        allow_dismiss: !0,
        newest_on_top: !0,
        placement: {from: "top", align: "center"},
        offset: 20,
        spacing: 10,
        z_index: 1100,
        delay: 5e3,
        timer: 1e3
    })
}
var typingTimer, currentEditProfile, doneTypingInterval = 350, profilePage = 0;
$(function () {
    tinymce.init({
        selector: "textarea",
        height: 200,
        menubar: !1,
        plugins: ["searchreplace wordcount paste"],
        toolbar: "undo redo | paste",
        browser_spellcheck: !0,
        content_css: "//www.tinymce.com/css/codepen.min.css"
    }), $("#profile-add-photo1-file").on("change", function () {
        profileAddPhotoUpload($(this).get(0).files[0], "1", this)
    });
    var a = $("#profile-search");
    a.on("keyup", function () {
        clearTimeout(typingTimer), typingTimer = setTimeout(doneTypingProfileSearch, doneTypingInterval)
    }), a.on("keydown", function () {
        clearTimeout(typingTimer)
    });
    var b = $("#profile-add-plant_name");
    b.on("keyup", function () {
        clearTimeout(typingTimer), typingTimer = setTimeout(doneTypingProfileAddName, doneTypingInterval)
    }), b.on("keydown", function () {
        clearTimeout(typingTimer)
    }), applyModalFixes(), getProfiles(!0)
});